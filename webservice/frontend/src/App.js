import React, { useState, useEffect } from 'react';
import axios from 'axios';
import './App.css';

const CATEGORIES = ['CPU', 'Ïø®Îü¨', 'Î©îÏù∏Î≥¥Îìú', 'RAM', 'Í∑∏ÎûòÌîΩÏπ¥Îìú', 'SSD', 'HDD', 'ÌååÏõå', 'ÏºÄÏù¥Ïä§'];

function App() {
  // --- State Variables ---
  const [parts, setParts] = useState([]);
  const [selectedCategory, setSelectedCategory] = useState('CPU');
  const [manufacturers, setManufacturers] = useState([]);
  const [selectedManufacturer, setSelectedManufacturer] = useState('');
  const [searchTerm, setSearchTerm] = useState('');
  const [history, setHistory] = useState([]);
  const [isHistoryVisible, setIsHistoryVisible] = useState(false);

  // --- useEffect Hooks ---

  // Ïï± Î°úÎî© Ïãú Î°úÏª¨ Ïä§ÌÜ†Î¶¨ÏßÄÏóêÏÑú ÌûàÏä§ÌÜ†Î¶¨ Î∂àÎü¨Ïò§Í∏∞
  useEffect(() => {
    const savedHistory = localStorage.getItem('searchHistory');
    if (savedHistory) {
      setHistory(JSON.parse(savedHistory));
    }
  }, []);

  // ÌûàÏä§ÌÜ†Î¶¨ Î≥ÄÍ≤Ω Ïãú Î°úÏª¨ Ïä§ÌÜ†Î¶¨ÏßÄÏóê Ï†ÄÏû•ÌïòÍ∏∞
  useEffect(() => {
    localStorage.setItem('searchHistory', JSON.stringify(history));
  }, [history]);

  // ÏÑ†ÌÉùÎêú Ïπ¥ÌÖåÍ≥†Î¶¨Í∞Ä Î∞îÎÄî ÎïåÎßàÎã§ Îç∞Ïù¥ÌÑ∞(Î∂ÄÌíà, Ï†úÏ°∞ÏÇ¨) ÏÉàÎ°ú Î∂àÎü¨Ïò§Í∏∞
  useEffect(() => {
    const fetchData = async () => {
      try {
        const partsRes = await axios.get(`/api/parts?category=${selectedCategory}`);
        setParts(partsRes.data);

        const manuRes = await axios.get(`/api/manufacturers?category=${selectedCategory}`);
        setManufacturers(manuRes.data);
      } catch (error) {
        console.error("Îç∞Ïù¥ÌÑ∞Î•º Î∂àÎü¨Ïò§Îäî Ï§ë Ïò§Î•òÍ∞Ä Î∞úÏÉùÌñàÏäµÎãàÎã§.", error);
      }
    };

    fetchData();
    setSelectedManufacturer(''); // Ïπ¥ÌÖåÍ≥†Î¶¨ Î≥ÄÍ≤Ω Ïãú Ï†úÏ°∞ÏÇ¨ ÏÑ†ÌÉù Ï¥àÍ∏∞Ìôî
    setSearchTerm(''); // Ïπ¥ÌÖåÍ≥†Î¶¨ Î≥ÄÍ≤Ω Ïãú Í≤ÄÏÉâÏñ¥ Ï¥àÍ∏∞Ìôî
  }, [selectedCategory]);

  // --- Event Handlers ---

  // Ïπ¥ÌÖåÍ≥†Î¶¨ Î≤ÑÌäº ÌÅ¥Î¶≠
  const handleCategoryClick = (category) => {
    setSelectedCategory(category);
  };

  // Ï†úÏ°∞ÏÇ¨ ÏÑ†ÌÉù
  const handleManufacturerChange = async (manufacturer) => {
    setSelectedManufacturer(manufacturer);
    // Ï†úÏ°∞ÏÇ¨ ÌïÑÌÑ∞ÎßÅ API Ìò∏Ï∂ú
    const res = await axios.get(`/api/parts?category=${selectedCategory}&manufacturer=${manufacturer}`);
    setParts(res.data);
  };

  // Í≤ÄÏÉâ Î≤ÑÌäº ÌÅ¥Î¶≠
  const handleSearch = async () => {
    try {
      // Í≤ÄÏÉâ API Ìò∏Ï∂ú
      const res = await axios.get(`/api/parts/search?category=${selectedCategory}&keyword=${searchTerm}`);
      setParts(res.data);
      // ÌûàÏä§ÌÜ†Î¶¨ Ï∂îÍ∞Ä
      if (searchTerm) {
        const newHistory = [searchTerm, ...history.filter(item => item !== searchTerm)];
        setHistory(newHistory.slice(0, 10));
      }
    } catch (error) {
      console.error("Í≤ÄÏÉâ Ï§ë Ïò§Î•òÍ∞Ä Î∞úÏÉùÌñàÏäµÎãàÎã§.", error);
    }
  };

  // ÌûàÏä§ÌÜ†Î¶¨ ÌÅ¥Î¶≠
  const handleHistoryClick = (keyword) => {
    setSearchTerm(keyword);
    // ÌûàÏä§ÌÜ†Î¶¨ ÌÇ§ÏõåÎìúÎ°ú Í≤ÄÏÉâ Ïã§Ìñâ
    handleSearch();
  };

  // ÌûàÏä§ÌÜ†Î¶¨ ÏÇ≠Ï†ú
  const handleDeleteHistory = (itemToDelete) => {
    setHistory(history.filter(item => item !== itemToDelete));
  };


  // --- JSX Rendering ---
  return (
    <div className="app-container">
      <h1>üñ•Ô∏è PC Î∂ÄÌíà Í∞ÄÍ≤© Ï†ïÎ≥¥ (Îã§ÎÇòÏôÄ)</h1>

      <nav className="category-nav">
        {CATEGORIES.map(category => (
          <button
            key={category}
            className={`category-btn ${selectedCategory === category ? 'active' : ''}`}
            onClick={() => handleCategoryClick(category)}
          >
            {category}
          </button>
        ))}
      </nav>

      <div className="filter-container">
        <select
          className="filter-select"
          value={selectedManufacturer}
          onChange={(e) => handleManufacturerChange(e.target.value)}
        >
          <option value="">-- Ï†úÏ°∞ÏÇ¨ Ï†ÑÏ≤¥ --</option>
          {manufacturers.map(manu => (
            <option key={manu} value={manu}>{manu}</option>
          ))}
        </select>
      </div>

      <div className="search-container">
        <div className="search-bar">
          <input
            type="text"
            placeholder={`${selectedCategory} ÎÇ¥ÏóêÏÑú Í≤ÄÏÉâ...`}
            value={searchTerm}
            onChange={(e) => setSearchTerm(e.target.value)}
            onKeyDown={(e) => e.key === 'Enter' && handleSearch()}
            onFocus={() => setIsHistoryVisible(true)}
            onBlur={() => setTimeout(() => setIsHistoryVisible(false), 150)}
          />
          <button onClick={handleSearch}>Í≤ÄÏÉâ</button>
        </div>
        
        {isHistoryVisible && history.length > 0 && (
          <div className="history-container">
            <ul className="history-list">
              {history.map((item, index) => (
                <li key={index} className="history-item">
                  <span className="history-term" onClick={() => handleHistoryClick(item)}>
                    {item}
                  </span>
                  <button className="delete-btn" onClick={() => handleDeleteHistory(item)}>X</button>
                </li>
              ))}
            </ul>
          </div>
        )}
      </div>

      <div className="parts-list">
        {parts.map(part => (
          <a key={part.id} href={part.link} target="_blank" rel="noopener noreferrer" className="part-card">
            <img src={part.imgSrc} alt={part.name} className="part-image" />
            <div className="part-info">
              <h2 className="part-name">{part.name}</h2>
              <p className="part-price">{part.price.toLocaleString()}Ïõê</p>
            </div>
          </a>
        ))}
      </div>
    </div>
  );
}

export default App;